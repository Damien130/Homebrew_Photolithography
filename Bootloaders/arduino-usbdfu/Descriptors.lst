   1               		.file	"Descriptors.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  11               	.global	CALLBACK_USB_GetDescriptor
  13               	CALLBACK_USB_GetDescriptor:
  14               	.LVL0:
  15               	.LFB65:
  16               		.file 1 "Descriptors.c"
   1:Descriptors.c **** /*
   2:Descriptors.c ****              LUFA Library
   3:Descriptors.c ****      Copyright (C) Dean Camera, 2010.
   4:Descriptors.c ****               
   5:Descriptors.c ****   dean [at] fourwalledcubicle [dot] com
   6:Descriptors.c ****       www.fourwalledcubicle.com
   7:Descriptors.c **** */
   8:Descriptors.c **** 
   9:Descriptors.c **** /*
  10:Descriptors.c ****   Copyright 2010  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:Descriptors.c **** 
  12:Descriptors.c ****   Permission to use, copy, modify, distribute, and sell this 
  13:Descriptors.c ****   software and its documentation for any purpose is hereby granted
  14:Descriptors.c ****   without fee, provided that the above copyright notice appear in 
  15:Descriptors.c ****   all copies and that both that the copyright notice and this
  16:Descriptors.c ****   permission notice and warranty disclaimer appear in supporting 
  17:Descriptors.c ****   documentation, and that the name of the author not be used in 
  18:Descriptors.c ****   advertising or publicity pertaining to distribution of the 
  19:Descriptors.c ****   software without specific, written prior permission.
  20:Descriptors.c **** 
  21:Descriptors.c ****   The author disclaim all warranties with regard to this
  22:Descriptors.c ****   software, including all implied warranties of merchantability
  23:Descriptors.c ****   and fitness.  In no event shall the author be liable for any
  24:Descriptors.c ****   special, indirect or consequential damages or any damages
  25:Descriptors.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:Descriptors.c ****   in an action of contract, negligence or other tortious action,
  27:Descriptors.c ****   arising out of or in connection with the use or performance of
  28:Descriptors.c ****   this software.
  29:Descriptors.c **** */
  30:Descriptors.c **** 
  31:Descriptors.c **** /** \file
  32:Descriptors.c ****  *
  33:Descriptors.c ****  *  USB Device Descriptors, for library use when in USB device mode. Descriptors are special 
  34:Descriptors.c ****  *  computer-readable structures which the host requests upon device enumeration, to determine
  35:Descriptors.c ****  *  the device's capabilities and functions.  
  36:Descriptors.c ****  */
  37:Descriptors.c **** 
  38:Descriptors.c **** #include "Descriptors.h"
  39:Descriptors.c **** 
  40:Descriptors.c **** /** Device descriptor structure. This descriptor, located in FLASH memory, describes the overall
  41:Descriptors.c ****  *  device characteristics, including the supported USB version, control endpoint size and the
  42:Descriptors.c ****  *  number of device configurations. The descriptor is read out by the USB host when the enumeratio
  43:Descriptors.c ****  *  process begins.
  44:Descriptors.c ****  */
  45:Descriptors.c **** USB_Descriptor_Device_t DeviceDescriptor =
  46:Descriptors.c **** {
  47:Descriptors.c **** 	.Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
  48:Descriptors.c **** 		
  49:Descriptors.c **** 	.USBSpecification       = VERSION_BCD(01.10),
  50:Descriptors.c **** 	.Class                  = 0x00,
  51:Descriptors.c **** 	.SubClass               = 0x00,
  52:Descriptors.c **** 	.Protocol               = 0x00,
  53:Descriptors.c **** 				
  54:Descriptors.c **** 	.Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
  55:Descriptors.c **** 		
  56:Descriptors.c **** 	.VendorID               = 0x03EB, // Atmel
  57:Descriptors.c **** 	.ProductID              = PRODUCT_ID_CODE, // MCU-dependent
  58:Descriptors.c **** 	.ReleaseNumber          = 0x0000,
  59:Descriptors.c **** 		
  60:Descriptors.c **** 	.ManufacturerStrIndex   = NO_DESCRIPTOR,
  61:Descriptors.c **** 	.ProductStrIndex        = 0x01,
  62:Descriptors.c **** 	.SerialNumStrIndex      = NO_DESCRIPTOR,
  63:Descriptors.c **** 		
  64:Descriptors.c **** 	.NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
  65:Descriptors.c **** };
  66:Descriptors.c **** 
  67:Descriptors.c **** /** Configuration descriptor structure. This descriptor, located in FLASH memory, describes the usa
  68:Descriptors.c ****  *  of the device in one of its supported configurations, including information about any device in
  69:Descriptors.c ****  *  and endpoints. The descriptor is read out by the USB host during the enumeration process when s
  70:Descriptors.c ****  *  a configuration so that the host may correctly communicate with the USB device.
  71:Descriptors.c ****  */
  72:Descriptors.c **** USB_Descriptor_Configuration_t ConfigurationDescriptor =
  73:Descriptors.c **** {
  74:Descriptors.c **** 	.Config = 
  75:Descriptors.c **** 		{
  76:Descriptors.c **** 			.Header                   = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type = DTYP
  77:Descriptors.c **** 
  78:Descriptors.c **** 			.TotalConfigurationSize   = sizeof(USB_Descriptor_Configuration_t),
  79:Descriptors.c **** 			.TotalInterfaces          = 1,
  80:Descriptors.c **** 
  81:Descriptors.c **** 			.ConfigurationNumber      = 1,
  82:Descriptors.c **** 			.ConfigurationStrIndex    = NO_DESCRIPTOR,
  83:Descriptors.c **** 				
  84:Descriptors.c **** 			.ConfigAttributes         = USB_CONFIG_ATTR_BUSPOWERED,
  85:Descriptors.c **** 			
  86:Descriptors.c **** 			.MaxPowerConsumption      = USB_CONFIG_POWER_MA(100)
  87:Descriptors.c **** 		},
  88:Descriptors.c **** 		
  89:Descriptors.c **** 	.DFU_Interface = 
  90:Descriptors.c **** 		{
  91:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_Interface},
  92:Descriptors.c **** 
  93:Descriptors.c **** 			.InterfaceNumber        = 0,
  94:Descriptors.c **** 			.AlternateSetting       = 0,
  95:Descriptors.c **** 			
  96:Descriptors.c **** 			.TotalEndpoints         = 0,
  97:Descriptors.c **** 				
  98:Descriptors.c **** 			.Class                  = 0xFE,
  99:Descriptors.c **** 			.SubClass               = 0x01,
 100:Descriptors.c **** 			.Protocol               = 0x02,
 101:Descriptors.c **** 
 102:Descriptors.c **** 			.InterfaceStrIndex      = NO_DESCRIPTOR
 103:Descriptors.c **** 		},
 104:Descriptors.c **** 		
 105:Descriptors.c **** 	.DFU_Functional = 
 106:Descriptors.c **** 		{
 107:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_DFU_Functional_Descriptor_t), .Type = DTYPE_DFUFun
 108:Descriptors.c **** 			
 109:Descriptors.c **** 			.Attributes             = (ATTR_CAN_UPLOAD | ATTR_CAN_DOWNLOAD),
 110:Descriptors.c **** 
 111:Descriptors.c **** 			.DetachTimeout          = 0x0000,
 112:Descriptors.c **** 			.TransferSize           = 0x0c00,
 113:Descriptors.c **** 		
 114:Descriptors.c **** 			.DFUSpecification       = VERSION_BCD(01.01)
 115:Descriptors.c **** 		}
 116:Descriptors.c **** };
 117:Descriptors.c **** 
 118:Descriptors.c **** /** Language descriptor structure. This descriptor, located in FLASH memory, is returned when the h
 119:Descriptors.c ****  *  the string descriptor with index 0 (the first index). It is actually an array of 16-bit integer
 120:Descriptors.c ****  *  via the language ID table available at USB.org what languages the device supports for its strin
 121:Descriptors.c ****  */ 
 122:Descriptors.c **** USB_Descriptor_String_t LanguageString =
 123:Descriptors.c **** {
 124:Descriptors.c **** 	.Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 125:Descriptors.c **** 		
 126:Descriptors.c **** 	.UnicodeString          = {LANGUAGE_ID_ENG}
 127:Descriptors.c **** };
 128:Descriptors.c **** 
 129:Descriptors.c **** /** Product descriptor string. This is a Unicode string containing the product's details in human r
 130:Descriptors.c ****  *  and is read out upon request by the host when the appropriate string ID is requested, listed in
 131:Descriptors.c ****  *  Descriptor.
 132:Descriptors.c ****  */
 133:Descriptors.c **** USB_Descriptor_String_t ProductString =
 134:Descriptors.c **** {
 135:Descriptors.c **** 	#if (ARDUINO_MODEL_PID == ARDUINO_UNO_PID)
 136:Descriptors.c **** 		.Header                 = {.Size = USB_STRING_LEN(15), .Type = DTYPE_String},
 137:Descriptors.c **** 			
 138:Descriptors.c **** 		.UnicodeString          = L"Arduino Uno DFU"
 139:Descriptors.c **** 	#elif (ARDUINO_MODEL_PID == ARDUINO_MEGA2560_PID)
 140:Descriptors.c **** 		.Header                 = {.Size = USB_STRING_LEN(21), .Type = DTYPE_String},
 141:Descriptors.c **** 			
 142:Descriptors.c **** 		.UnicodeString          = L"Arduino Mega 2560 DFU"
 143:Descriptors.c **** 	#endif
 144:Descriptors.c **** };
 145:Descriptors.c **** 
 146:Descriptors.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 147:Descriptors.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 148:Descriptors.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 149:Descriptors.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 150:Descriptors.c ****  *  USB host.
 151:Descriptors.c ****  */
 152:Descriptors.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 153:Descriptors.c ****                                     const uint8_t wIndex,
 154:Descriptors.c ****                                     void** const DescriptorAddress)
 155:Descriptors.c **** {
  17               		.loc 1 155 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 155 1 is_stmt 0 view .LVU1
  24 0000 FA01      		movw r30,r20
 156:Descriptors.c **** 	const uint8_t  DescriptorType   = (wValue >> 8);
  25               		.loc 1 156 2 is_stmt 1 view .LVU2
  26               		.loc 1 156 44 is_stmt 0 view .LVU3
  27 0002 292F      		mov r18,r25
  28 0004 30E0      		ldi r19,0
  29               	.LVL1:
 157:Descriptors.c **** 	const uint8_t  DescriptorNumber = (wValue & 0xFF);
  30               		.loc 1 157 2 is_stmt 1 view .LVU4
 158:Descriptors.c **** 
 159:Descriptors.c **** 	void*    Address = NULL;
  31               		.loc 1 159 2 view .LVU5
 160:Descriptors.c **** 	uint16_t Size    = NO_DESCRIPTOR;
  32               		.loc 1 160 2 view .LVU6
 161:Descriptors.c **** 
 162:Descriptors.c **** 	switch (DescriptorType)
  33               		.loc 1 162 2 view .LVU7
  34 0006 2230      		cpi r18,2
  35 0008 3105      		cpc r19,__zero_reg__
  36 000a 01F0      		breq .L5
  37 000c 2330      		cpi r18,3
  38 000e 3105      		cpc r19,__zero_reg__
  39 0010 01F0      		breq .L3
  40 0012 2130      		cpi r18,1
  41 0014 3105      		cpc r19,__zero_reg__
  42 0016 01F4      		brne .L6
  43 0018 82E1      		ldi r24,lo8(18)
  44 001a 90E0      		ldi r25,0
  45               	.LVL2:
  46               		.loc 1 162 2 is_stmt 0 view .LVU8
  47 001c 20E0      		ldi r18,lo8(DeviceDescriptor)
  48 001e 30E0      		ldi r19,hi8(DeviceDescriptor)
  49               	.LVL3:
  50               	.L2:
 163:Descriptors.c **** 	{
 164:Descriptors.c **** 		case DTYPE_Device:
 165:Descriptors.c **** 			Address = &DeviceDescriptor;
 166:Descriptors.c **** 			Size    = sizeof(USB_Descriptor_Device_t);
 167:Descriptors.c **** 			break;
 168:Descriptors.c **** 		case DTYPE_Configuration: 
 169:Descriptors.c **** 			Address = &ConfigurationDescriptor;
 170:Descriptors.c **** 			Size    = sizeof(USB_Descriptor_Configuration_t);
 171:Descriptors.c **** 			break;
 172:Descriptors.c **** 		case DTYPE_String: 
 173:Descriptors.c **** 			if (!(DescriptorNumber))
 174:Descriptors.c **** 			{
 175:Descriptors.c **** 				Address = &LanguageString;
 176:Descriptors.c **** 				Size    = LanguageString.Header.Size;
 177:Descriptors.c **** 			}
 178:Descriptors.c **** 			else
 179:Descriptors.c **** 			{
 180:Descriptors.c **** 				Address = &ProductString;
 181:Descriptors.c **** 				Size    = ProductString.Header.Size;
 182:Descriptors.c **** 			}
 183:Descriptors.c **** 			
 184:Descriptors.c **** 			break;
 185:Descriptors.c **** 	}
 186:Descriptors.c **** 	
 187:Descriptors.c **** 	*DescriptorAddress = Address;
  51               		.loc 1 187 2 is_stmt 1 view .LVU9
  52               		.loc 1 187 21 is_stmt 0 view .LVU10
  53 0020 3183      		std Z+1,r19
  54 0022 2083      		st Z,r18
 188:Descriptors.c **** 	return Size;
  55               		.loc 1 188 2 is_stmt 1 view .LVU11
  56               	/* epilogue start */
 189:Descriptors.c **** }
  57               		.loc 1 189 1 is_stmt 0 view .LVU12
  58 0024 0895      		ret
  59               	.LVL4:
  60               	.L3:
 173:Descriptors.c **** 			{
  61               		.loc 1 173 4 is_stmt 1 view .LVU13
 173:Descriptors.c **** 			{
  62               		.loc 1 173 7 is_stmt 0 view .LVU14
  63 0026 8111      		cpse r24,__zero_reg__
  64 0028 00C0      		rjmp .L4
 175:Descriptors.c **** 				Size    = LanguageString.Header.Size;
  65               		.loc 1 175 5 is_stmt 1 view .LVU15
  66               	.LVL5:
 176:Descriptors.c **** 			}
  67               		.loc 1 176 5 view .LVU16
 176:Descriptors.c **** 			}
  68               		.loc 1 176 13 is_stmt 0 view .LVU17
  69 002a 8091 0000 		lds r24,LanguageString
  70               	.LVL6:
 176:Descriptors.c **** 			}
  71               		.loc 1 176 13 view .LVU18
  72 002e 90E0      		ldi r25,0
  73               	.LVL7:
 175:Descriptors.c **** 				Size    = LanguageString.Header.Size;
  74               		.loc 1 175 13 view .LVU19
  75 0030 20E0      		ldi r18,lo8(LanguageString)
  76 0032 30E0      		ldi r19,hi8(LanguageString)
  77               	.LVL8:
 175:Descriptors.c **** 				Size    = LanguageString.Header.Size;
  78               		.loc 1 175 13 view .LVU20
  79 0034 00C0      		rjmp .L2
  80               	.LVL9:
  81               	.L4:
 180:Descriptors.c **** 				Size    = ProductString.Header.Size;
  82               		.loc 1 180 5 is_stmt 1 view .LVU21
 181:Descriptors.c **** 			}
  83               		.loc 1 181 5 view .LVU22
 181:Descriptors.c **** 			}
  84               		.loc 1 181 13 is_stmt 0 view .LVU23
  85 0036 8091 0000 		lds r24,ProductString
  86               	.LVL10:
 181:Descriptors.c **** 			}
  87               		.loc 1 181 13 view .LVU24
  88 003a 90E0      		ldi r25,0
  89               	.LVL11:
 180:Descriptors.c **** 				Size    = ProductString.Header.Size;
  90               		.loc 1 180 13 view .LVU25
  91 003c 20E0      		ldi r18,lo8(ProductString)
  92 003e 30E0      		ldi r19,hi8(ProductString)
  93               	.LVL12:
 180:Descriptors.c **** 				Size    = ProductString.Header.Size;
  94               		.loc 1 180 13 view .LVU26
  95 0040 00C0      		rjmp .L2
  96               	.LVL13:
  97               	.L5:
 170:Descriptors.c **** 			break;
  98               		.loc 1 170 12 view .LVU27
  99 0042 8BE1      		ldi r24,lo8(27)
 100 0044 90E0      		ldi r25,0
 101               	.LVL14:
 169:Descriptors.c **** 			Size    = sizeof(USB_Descriptor_Configuration_t);
 102               		.loc 1 169 12 view .LVU28
 103 0046 20E0      		ldi r18,lo8(ConfigurationDescriptor)
 104 0048 30E0      		ldi r19,hi8(ConfigurationDescriptor)
 105               	.LVL15:
 169:Descriptors.c **** 			Size    = sizeof(USB_Descriptor_Configuration_t);
 106               		.loc 1 169 12 view .LVU29
 107 004a 00C0      		rjmp .L2
 108               	.LVL16:
 109               	.L6:
 160:Descriptors.c **** 
 110               		.loc 1 160 11 view .LVU30
 111 004c 90E0      		ldi r25,0
 112 004e 80E0      		ldi r24,0
 113               	.LVL17:
 159:Descriptors.c **** 	uint16_t Size    = NO_DESCRIPTOR;
 114               		.loc 1 159 11 view .LVU31
 115 0050 30E0      		ldi r19,0
 116 0052 20E0      		ldi r18,0
 117               	.LVL18:
 159:Descriptors.c **** 	uint16_t Size    = NO_DESCRIPTOR;
 118               		.loc 1 159 11 view .LVU32
 119 0054 00C0      		rjmp .L2
 120               		.cfi_endproc
 121               	.LFE65:
 123               	.global	ProductString
 124               		.data
 127               	ProductString:
 128 0000 2C        		.byte	44
 129 0001 03        		.byte	3
 130 0002 4100      		.string	"A"
 131 0004 7200      		.string	"r"
 132 0006 6400      		.string	"d"
 133 0008 7500      		.string	"u"
 134 000a 6900      		.string	"i"
 135 000c 6E00      		.string	"n"
 136 000e 6F00      		.string	"o"
 137 0010 2000      		.string	" "
 138 0012 4D00      		.string	"M"
 139 0014 6500      		.string	"e"
 140 0016 6700      		.string	"g"
 141 0018 6100      		.string	"a"
 142 001a 2000      		.string	" "
 143 001c 3200      		.string	"2"
 144 001e 3500      		.string	"5"
 145 0020 3600      		.string	"6"
 146 0022 3000      		.string	"0"
 147 0024 2000      		.string	" "
 148 0026 4400      		.string	"D"
 149 0028 4600      		.string	"F"
 150 002a 5500      		.string	"U"
 151 002c 00        		.string	""
 152 002d 00        		.string	""
 153               	.global	LanguageString
 156               	LanguageString:
 157 002e 04        		.byte	4
 158 002f 03        		.byte	3
 159 0030 0904      		.word	1033
 160               	.global	ConfigurationDescriptor
 163               	ConfigurationDescriptor:
 164 0032 09        		.byte	9
 165 0033 02        		.byte	2
 166 0034 1B00      		.word	27
 167 0036 01        		.byte	1
 168 0037 01        		.byte	1
 169 0038 00        		.byte	0
 170 0039 80        		.byte	-128
 171 003a 32        		.byte	50
 172 003b 09        		.byte	9
 173 003c 04        		.byte	4
 174 003d 00        		.byte	0
 175 003e 00        		.byte	0
 176 003f 00        		.byte	0
 177 0040 FE        		.byte	-2
 178 0041 01        		.byte	1
 179 0042 02        		.byte	2
 180 0043 00        		.byte	0
 181 0044 09        		.byte	9
 182 0045 21        		.byte	33
 183 0046 03        		.byte	3
 184 0047 0000      		.word	0
 185 0049 000C      		.word	3072
 186 004b 0001      		.word	256
 187               	.global	DeviceDescriptor
 190               	DeviceDescriptor:
 191 004d 12        		.byte	18
 192 004e 01        		.byte	1
 193 004f 1001      		.word	272
 194 0051 00        		.byte	0
 195 0052 00        		.byte	0
 196 0053 00        		.byte	0
 197 0054 20        		.byte	32
 198 0055 EB03      		.word	1003
 199 0057 EF2F      		.word	12271
 200 0059 0000      		.word	0
 201 005b 00        		.byte	0
 202 005c 01        		.byte	1
 203 005d 00        		.byte	0
 204 005e 01        		.byte	1
 205               		.text
 206               	.Letext0:
 207               		.file 2 "/usr/local/Cellar/avr-gcc@9/9.4.0/avr/include/stdint.h"
 208               		.file 3 "/usr/local/Cellar/avr-gcc@9/9.4.0/lib/avr-gcc/9/gcc/avr/9.4.0/include/stddef.h"
 209               		.file 4 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/../HighLevel/StdDescriptors.h"
 210               		.file 5 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/../HighLevel/StdRequestType.h"
 211               		.file 6 "../../LUFA/Drivers/USB/HighLevel/../LowLevel/../HighLevel/DeviceStandardReq.h"
 212               		.file 7 "../../LUFA/Drivers/USB/HighLevel/USBTask.h"
 213               		.file 8 "Descriptors.h"
DEFINED SYMBOLS
                            *ABS*:00000000 Descriptors.c
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:2      *ABS*:0000003e __SP_H__
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:3      *ABS*:0000003d __SP_L__
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:4      *ABS*:0000003f __SREG__
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:6      *ABS*:00000001 __zero_reg__
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:13     .text.CALLBACK_USB_GetDescriptor:00000000 CALLBACK_USB_GetDescriptor
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:17     .text.CALLBACK_USB_GetDescriptor:00000000 .Loc.0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:18     .text.CALLBACK_USB_GetDescriptor:00000000 L0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:23     .text.CALLBACK_USB_GetDescriptor:00000000 .Loc.1
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:25     .text.CALLBACK_USB_GetDescriptor:00000002 .Loc.2
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:26     .text.CALLBACK_USB_GetDescriptor:00000002 .Loc.3
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:30     .text.CALLBACK_USB_GetDescriptor:00000006 .Loc.4
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:31     .text.CALLBACK_USB_GetDescriptor:00000006 .Loc.5
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:32     .text.CALLBACK_USB_GetDescriptor:00000006 .Loc.6
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:33     .text.CALLBACK_USB_GetDescriptor:00000006 .Loc.7
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:46     .text.CALLBACK_USB_GetDescriptor:0000001c .Loc.8
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:190    .data:0000004d DeviceDescriptor
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:51     .text.CALLBACK_USB_GetDescriptor:00000020 .Loc.9
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:52     .text.CALLBACK_USB_GetDescriptor:00000020 .Loc.10
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:55     .text.CALLBACK_USB_GetDescriptor:00000024 .Loc.11
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:57     .text.CALLBACK_USB_GetDescriptor:00000024 .Loc.12
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:61     .text.CALLBACK_USB_GetDescriptor:00000026 .Loc.13
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:62     .text.CALLBACK_USB_GetDescriptor:00000026 .Loc.14
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:65     .text.CALLBACK_USB_GetDescriptor:0000002a .Loc.15
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:67     .text.CALLBACK_USB_GetDescriptor:0000002a .Loc.16
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:68     .text.CALLBACK_USB_GetDescriptor:0000002a .Loc.17
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:156    .data:0000002e LanguageString
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:71     .text.CALLBACK_USB_GetDescriptor:0000002e .Loc.18
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:74     .text.CALLBACK_USB_GetDescriptor:00000030 .Loc.19
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:78     .text.CALLBACK_USB_GetDescriptor:00000034 .Loc.20
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:82     .text.CALLBACK_USB_GetDescriptor:00000036 .Loc.21
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:83     .text.CALLBACK_USB_GetDescriptor:00000036 .Loc.22
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:84     .text.CALLBACK_USB_GetDescriptor:00000036 .Loc.23
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:127    .data:00000000 ProductString
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:87     .text.CALLBACK_USB_GetDescriptor:0000003a .Loc.24
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:90     .text.CALLBACK_USB_GetDescriptor:0000003c .Loc.25
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:94     .text.CALLBACK_USB_GetDescriptor:00000040 .Loc.26
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:98     .text.CALLBACK_USB_GetDescriptor:00000042 .Loc.27
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:102    .text.CALLBACK_USB_GetDescriptor:00000046 .Loc.28
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:163    .data:00000032 ConfigurationDescriptor
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:106    .text.CALLBACK_USB_GetDescriptor:0000004a .Loc.29
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:110    .text.CALLBACK_USB_GetDescriptor:0000004c .Loc.30
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:114    .text.CALLBACK_USB_GetDescriptor:00000050 .Loc.31
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:118    .text.CALLBACK_USB_GetDescriptor:00000054 .Loc.32
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:120    .text.CALLBACK_USB_GetDescriptor:00000056 L0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:124    .text.CALLBACK_USB_GetDescriptor:00000056 L0
                     .debug_frame:00000000 L0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:97     .text.CALLBACK_USB_GetDescriptor:00000042 .L5
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:60     .text.CALLBACK_USB_GetDescriptor:00000026 .L3
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:109    .text.CALLBACK_USB_GetDescriptor:0000004c .L6
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:81     .text.CALLBACK_USB_GetDescriptor:00000036 .L4
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:50     .text.CALLBACK_USB_GetDescriptor:00000020 .L2
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:992    .debug_abbrev:00000000 .Ldebug_abbrev0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1624   .debug_ranges:00000000 .Ldebug_ranges0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1630   .debug_line:00000000 .Ldebug_line0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:15     .text.CALLBACK_USB_GetDescriptor:00000000 .LFB65
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:121    .text.CALLBACK_USB_GetDescriptor:00000056 .LFE65
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1352   .debug_loc:00000014 .LLST0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1331   .debug_loc:00000000 .LVUS0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1446   .debug_loc:000000bc .LLST1
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1435   .debug_loc:000000b2 .LVUS1
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1480   .debug_loc:00000105 .LLST2
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1469   .debug_loc:000000fb .LVUS2
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1514   .debug_loc:0000014e .LLST3
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1503   .debug_loc:00000144 .LVUS3
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1561   .debug_loc:000001a4 .LLST4
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:1546   .debug_loc:00000196 .LVUS4
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:14     .text.CALLBACK_USB_GetDescriptor:00000000 .LVL0
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:45     .text.CALLBACK_USB_GetDescriptor:0000001c .LVL2
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:59     .text.CALLBACK_USB_GetDescriptor:00000026 .LVL4
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:70     .text.CALLBACK_USB_GetDescriptor:0000002e .LVL6
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:80     .text.CALLBACK_USB_GetDescriptor:00000036 .LVL9
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:86     .text.CALLBACK_USB_GetDescriptor:0000003a .LVL10
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:96     .text.CALLBACK_USB_GetDescriptor:00000042 .LVL13
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:101    .text.CALLBACK_USB_GetDescriptor:00000046 .LVL14
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:108    .text.CALLBACK_USB_GetDescriptor:0000004c .LVL16
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:113    .text.CALLBACK_USB_GetDescriptor:00000050 .LVL17
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:29     .text.CALLBACK_USB_GetDescriptor:00000006 .LVL1
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:49     .text.CALLBACK_USB_GetDescriptor:00000020 .LVL3
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:77     .text.CALLBACK_USB_GetDescriptor:00000034 .LVL8
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:93     .text.CALLBACK_USB_GetDescriptor:00000040 .LVL12
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:105    .text.CALLBACK_USB_GetDescriptor:0000004a .LVL15
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:117    .text.CALLBACK_USB_GetDescriptor:00000054 .LVL18
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:66     .text.CALLBACK_USB_GetDescriptor:0000002a .LVL5
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:73     .text.CALLBACK_USB_GetDescriptor:00000030 .LVL7
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:89     .text.CALLBACK_USB_GetDescriptor:0000003c .LVL11
/var/folders/nb/jmctvymd7tl3gbyxd89zdwlc0000gn/T//ccg1WGwU.s:215    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
__do_copy_data
